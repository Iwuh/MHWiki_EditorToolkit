@page
@model WebToolkit.Pages.TreeGeneratorModel
@{
	ViewData["Title"] = "Tree Generator";
}
@section Scripts
{
	<script src="~/js/treeTemplates/weapon.js" type="text/javascript"></script>
	<script src="~/js/TreeGenerator.js" type="text/javascript"></script>
	<script type="text/javascript">
		function callGenerator(finalData, sharpnessBase, maxSharpnessCount, pathName) {
			$.ajax({
				url: '@(Url.Action("GenerateTree", "WeaponTree"))/',
				data: { 
					json: JSON.stringify(finalData), 
					sharpnessBase: sharpnessBase, 
					maxSharpnessCount: maxSharpnessCount, 
					pathName: pathName, 
					defaultIcon: typeof($("#ddlIconSelect").val()) !== 'undefined' ? $("#ddlIconSelect").val() : "" 
				},
				type: "POST",
				dataType: "json",
				statusCode: {
					200: function (result) {
					if ($("#CSSExcludeToggle").is(":checked")) {
						$("#txtResults").val(result.responseText.split("<br>")[1].slice(2));
					}else{
						$("#txtResults").val(result.responseText);
					}
						if (typeof (mdlGenerate) === 'undefined') {
							mdlGenerate = new bootstrap.Modal(document.getElementById('mdlGenerate'));
						}
						mdlGenerate.show();
					},
					500: function (jqXHR) {
						alert(jqXHR.responseText);
					}
				}
			});
		}
		function parseCsv() {
			var text = $("#inputCsvFile").val();

			$.ajax({
				url: '@(Url.Action("ParseCsv", "WeaponTree"))/',
				data: {
					csvFile: text,
					duplicateSharpness: ($("#duplicateSharpnessCsv").is(":checked"))
				},
				type: "POST",
				dataType: "text",
				statusCode: {
					200: function (result) {
						var resObj = JSON.parse(result);
						loadTreeHtml(resObj.item2, JSON.parse(resObj.item1));
					},
					500: function (jqXHR) {
						alert(jqXHR.responseText);
					}
				}
			});
			bootstrap.Modal.getInstance($("#mdlCsv")).hide();
		}
		var loadTreeHtml = function (result, loadedData) {
			$("#divCardContainer").empty();
			$("#divCardContainer").append(result);
			$(".data-value-hidden").each(function () {
				$(this).val($(this).attr("loaded-value"));
			});
			for (var i2 = 0; i2 < loadedData.length; i2++) {
				var pathData = loadedData[i2];
				var card = $($(".card-holder")[i2]);
				for (var i = 0; i < pathData.data.length; i++) {
					var dataObj = pathData.data[i];
					var statsInput = $($(card).find(".card .card-body .table-tree tbody tr")[i]).find(".weapon-stats-input");
					var statsEls = $("#mdlModifyStats .modal-body").find(".data-value");
					var statObj = {};
					for (var incr = 0; incr < statsEls.length; incr++) {
						var statEl = $(statsEls[incr]);
						statObj[statEl.attr("data-label")] = dataObj[statEl.attr("data-label")];
					}
					$(statsInput[0]).val(JSON.stringify(statObj));
					validateComplexData($(statsInput.parent().children()[1]), statsInput[0], WeaponTemplate.validateStats);
					var decosInput = $($(card).find(".card .card-body .table-tree tbody tr")[i]).find(".weapon-decos-input");
					validateComplexData($(decosInput.parent().children()[1]), decosInput[0], WeaponTemplate.validateDecos);
					var sharpnessInput = $($(card).find(".card .card-body .table-tree tbody tr")[i]).find(".weapon-sharpness-input");
					validateComplexData($(sharpnessInput.parent().children()[1]), sharpnessInput[0], WeaponTemplate.validateSharpness);
					$($(card).find(".card .card-body .table-tree tbody tr")[i]).find(".weapon-can-forge-input").prop("checked", dataObj["can-forge"] == true);
					$($(card).find(".card .card-body .table-tree tbody tr")[i]).find(".weapon-can-rollback-input").prop("checked", dataObj["can-rollback"] == true);
					$($(card).find(".card .card-body .table-tree tbody tr")[i]).find(".weapon-parent-input").first().val(dataObj["parent"]);
					$($(card).find(".card .card-body .table-tree tbody tr")[i]).find(".weapon-path-link-input").first().val(dataObj["path-link"]);
				}
			}
		}
		var pageLoadData = function (loadedData) {
			var pathData = loadedData[0];
			if (typeof (pathData.treeType) !== 'undefined') {
				$("#ddlTemplateSelect").val(pathData.treeType);
				$("#ddlTemplateSelect").trigger("change");
			}
			if (typeof (pathData.game) !== 'undefined') {
				$("#ddlGameSelect").val(pathData.game);
				$("#ddlGameSelect").trigger("change");
			}
			$(".card-holder").remove();
			$.ajax({
				url: '@(Url.Action("LoadTree", "WeaponTree"))/',
				data: { fileContents: JSON.stringify(loadedData) },
				type: "POST",
				dataType: "json",
				statusCode: {
					200: function (result) {
						$("body").css("cursor", "default");
						if (typeof (loadedData[0].defaultIconType) !== 'undefined') {
							$("#ddlIconSelect").val("");
							$("#ddlIconSelect").trigger("change");
							$("#ddlIconSelect").val(loadedData[0].defaultIconType);
							$("#ddlIconSelect").trigger("change");
						}
						loadTreeHtml(result["responseText"], loadedData);
					},
					500: function (jqXHR) {
						$("body").css("cursor", "default");
						alert(jqXHR.responseText);
					}
				}
			});
		}
	</script>
}
<div class="container-fluid" style="height: 97vh">
	<div class="row pt-1 m-auto p-auto">
		<div class="col">
			<div class="row py-1">
				<div class="col-2">
					<label for="ddlTemplateSelect">Tree Type</label>
					<select class="form-control form-select" onchange="loadTemplate()" id="ddlTemplateSelect">
						<option value="Weapon">Weapon Tree</option>
					</select>
				</div>
				<div class="col-2">
					<label for="ddlGameSelect">Game</label>
					<select class="form-control form-select" onchange="updateIcons()" id="ddlGameSelect">
						<option value="MH1">Monster Hunter</option>
						<option value="MHG">Monster Hunter G</option>
						<option value="MHF1">Monster Hunter Freedom</option>
						<option value="MH2">Monster Hunter 2</option>
						<option value="MHF2">Monster Hunter Freedom 2</option>
						<option value="MHFU">Monster Hunter Freedom Unite</option>
						<option value="MH3">Monster Hunter 3</option>
						<option value="MHP3">Monster Hunter Portable 3rd</option>
						<option value="MH3U">Monster Hunter 3 Ultimate</option>
						<option value="MH4">Monster Hunter 4</option>
						<option value="MH4U">Monster Hunter 4 Ultimate</option>
						<option value="MHGen">Monster Hunter Generations</option>
						<option value="MHGU">Monster Hunter Generations Ultimate</option>
						<option value="MHWI">Monster Hunter World: Iceborne</option>
						<option value="MHRS">Monster Hunter Rise: Sunbreak</option>
						<option value="MHWilds">Monster Hunter Wilds</option>
					</select>
				</div>
				<div class="col-2" title="Will be used if item does not have one selected.">
					<label for="ddlIconSelect">Default Icon Type</label>
					<select class="form-control form-select" id="ddlIconSelect">
						<option value="">Select a Game and Tree Type</option>
					</select>
				</div>
				<div class="col">
					<div class="float-end">
						<button type="button" onclick="save()" class="btn btn-success" title="Save your progress to your local machine to reload later."><i class="bi bi-floppy"></i></button>
						<button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#mdlLoad" title="Load previously saved progress."><i class="bi bi-upload"></i></button>
						<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#mdlCsv" title="Generate weapons from csv"><i class="bi bi-filetype-csv"></i></button>
						<button type="button" onclick="generateTree();" class="btn btn-primary btn-generate-wiki-data" title="When finished, click here to generate the final product.">Generate Tree</button>
						<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#mdlHelp" title="Help"><i class="bi bi-question-circle"></i></button>
						<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#mdlChangeLog" title="View Change Log"><i class="bi bi-info-circle"></i></button>
					</div>
				</div>
			</div>
			<div class="row py-1">
				<div class="col m-auto">
					<div class="float-end align-self-end form-group">
						<button type="button" onclick="addTreeCard();" class="btn btn-primary" title="Add new card that represents a new tree in the document.">Add New Tree</button>
					</div>
				</div>
			</div>
			<div class="row">
				<div id="divCardContainer">
					<div class="row py-1 card-holder">
						<div class="card" id="card_1">
							<div class="card-header">
								<div class="row">
									<div class="col-2">
										<div class="row pb-1">
											<div class="col">
												<button style="padding: .25rem; margin-right:.25rem;" class="btn btn-primary bi bi-arrow-up float-start" onclick="$(this).parents('.card-holder').after($(this).parents('.card-holder').prev())"></button>
												<button style="padding: .25rem;" class="btn btn-primary bi bi-arrow-down float-start" onclick="$(this).parents('.card-holder').before($(this).parents('.card-holder').next())"></button>
											</div>
										</div>
									</div>
									<div class="col">
										<button type="button" class="btn btn-primary btn-collapse-card float-end" data-is-collapsed="false" onmousedown="collapseCard($(this));" title="Collapse this tree."><i class="bi bi-arrows-collapse"></i></button>
									</div>
								</div>
								<div class="row">
									<div class="col-6">
										<label>Path Name</label>
										<input type="text" class="w-100 form-control weapon-path-name-input data-value" onchange="initRow()" data-label="path-name" />
									</div>
									<div class="col m-auto">
										<div class="float-end">
											<button type="button" onclick="$(this).parents('div.card-holder').first().remove();" class="btn btn-danger btn-delete-card" title="Delete this tree."><i class="bi bi-trash"></i></button>
										</div>
									</div>
								</div>
							</div>
							<div class="card-body" id="card-body_1">
								<div class="row">
									<div class="col m-auto">
										<div class="align-self-end float-end form-group">
											<button type="button" onclick="addEmptyRow($(this).parents('.card-body').children().find('table.table-tree tbody'));" class="btn btn-primary" title="Add new row that represents a weapon in the tree.">Add New Weapon</button>
										</div>
									</div>
								</div>
								<div class="row">
									<div class="col">
										<table class="table table-striped table-dark table-tree">
											<thead>
											</thead>
											<tbody>
											</tbody>
										</table>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<div class="modal fade" id="mdlHelp" tabindex="-1" aria-labelledby="helpModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-xl">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="helpModalLabel">Help</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				This tool creates weapon trees for the <a target="_blank" href="https://monsterhunterwiki.org/wiki/Main_Page">Monster Hunter wiki</a>. <br> <br>
				To generate this data, start by adding the tree's path name in the top left. Next, select what type of tree you want to generate (currently, only weapon trees are supported). <br> <br>
				Then, select which game you want to generate the tree for (only MHWI and MHRS are supported so far). Finally, select what type of icon you want to use as default. Note that you can override an individual row's icon, if necessary.<br> <br>
				Once the tree information is populated, you can begin filling out entries for each item in the tree by entering the appropriate data in each cell. If a cell has a button in it, the button will launch a special editor for more complicated data (such as sharpness values).<br> <br>
				Once every item has been filled out accordingly, click "Generate Tree" on the top right, and your completed template will appear in a popup textbox. You can click the clipboard (<span class="bi bi-clipboard"></span>) icon in the top-right of the popup to automatically copy the contents of the results box to your device's clipboard.<br> <br>
				Simply paste that data into the appropriate area of the page, and you're done!<br> <br>
				If, at any point, you need to reorder any of the items, you can click and hold on the drag handles (<span class="bi bi-arrows-move"></span>) on the left of each of them and drag them to the appropriate place.<br /><br />
				If you need to take a break, feel free to click the green save (<span class="bi bi-floppy"></span>) button in the top right. A file will be downloaded with your save data in it. When you come back, click the yellow load (<span class="bi bi-upload"></span>) button in the top right and navigate to your file. Click "Load", then you're ready to go!
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>
<div class="modal fade" id="mdlGenerate" tabindex="-1" aria-labelledby="generateModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-xl">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="generateModalLabel">Generated Table</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div class="row py-1">
					<div class="col">
						<label for="txtResults" class="text-bottom">Complete Weapon Tree Source</label>
						<button class="btn btn-primary bi bi-clipboard float-end" title="Copy contents of table results." onclick="copyToClipboard();"></button>
					</div>
				</div>
				<div class="row form-check form-switch">
					<div class="col">
						<input id="CSSExcludeToggle" class="form-check-input" type="checkbox" onclick="generateTree()" id="flexSwitchCheckDefault">
						<label class="form-check-label" for="flexSwitchCheckDefault">Exclude CSS</label>
					</div>
				</div>
				<div class="row">
					<div class="col">
						<textarea id="txtResults" style="height:200px;" class="w-100 form-control"></textarea>
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>
<div class="modal fade" id="mdlChangeLog" tabindex="-1" aria-labelledby="changeLogModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="changeLogModalLabel">Change Log</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body" style="max-height: 78vh; overflow-y:auto;">
				<div class="row">
					<div class="col">
						<p>Ping or message @@rampagerobot on Discord if you have any issues.</p>
					</div>
				</div>
				<div class="row py-2">
					<div class="col">
						<div class="card">
							<div class="card-header">
								<h4>v2.0.3</h4>
							</div>
							<div class="card-body">
								<h6>Affinity and decorations hidden on Gen 1 games.</h6>
								<h6>Element hidden on HBG and LBG.</h6>
								<h6>Duplicated rows now properly fall beneath the source row.</h6>
								<h6>Adding a new tree after a save load no longer has two header and body rows.</h6>
								<h6>Quotation marks are now escaped during save, load, and generation.</h6>
							</div>
						</div>
					</div>
				</div>
				<div class="row py-2">
					<div class="col">
						<div class="card">
							<div class="card-header">
								<h4>v2.0.2</h4>
							</div>
							<div class="card-body">
								<h6>Added functionality to move rows between trees.</h6>
							</div>
						</div>
					</div>
				</div>
				<div class="row py-2">
					<div class="col">
						<div class="card">
							<div class="card-header">
								<h4>v2.0.1</h4>
							</div>
							<div class="card-body">
								<h6>Fixed a bug with cloned rows not having the proper onclick events.</h6>
							</div>
						</div>
					</div>
				</div>
				<div class="row py-2">
					<div class="col">
						<div class="card">
							<div class="card-header">
								<h4>v2.0.1</h4>
							</div>
							<div class="card-body">
								<h6>Added pre-world decoration support.</h6>
							</div>
						</div>
					</div>
				</div>
				<div class="row py-2">
					<div class="col">
						<div class="card">
							<div class="card-header">
								<h4>v2.0</h4>
							</div>
							<div class="card-body">
								<h6>Added support for all games.</h6>
								<h6>Switched to DefaultLP's new collapsible mega-tree format.</h6>
								<h6>Switched file loading to the backend for much quicker response times.</h6>
								<h6>Added column wrapping for bow coatings.</h6>
								<h6>Added item icons instead of coating names for bow coatings.</h6>
							</div>
						</div>
					</div>
				</div>
				<div class="row py-2">
					<div class="col">
						<div class="card">
							<div class="card-header">
								<h4>v1.5</h4>
							</div>
							<div class="card-body">
								<h6>Added support for MHGU.</h6>
								<h6>Added weapon-specific fields.</h6>
								<h6>Added support for empty values.</h6>
							</div>
						</div>
					</div>
				</div>
				<div class="row py-2">
					<div class="col">
						<div class="card">
							<div class="card-header">
								<h4>v1.4</h4>
							</div>
							<div class="card-body">
								<h6>Added game-specific stat fields.</h6>
								<h6>Moved most stat fields to modal.</h6>
							</div>
						</div>
					</div>
				</div>
				<div class="row py-2">
					<div class="col">
						<div class="card">
							<div class="card-header">
								<h4>v1.4</h4>
							</div>
							<div class="card-body">
								<h6>Added multiple path building.</h6>
								<h6>Added legends.</h6>
								<h6>Added rollback/craftable icons.</h6>
								<h6>Switched weapon links to generic template.</h6>
							</div>
						</div>
					</div>
				</div>
				<div class="row py-2">
					<div class="col">
						<div class="card">
							<div class="card-header">
								<h4>v1.3</h4>
							</div>
							<div class="card-body">
								<h6>Implemented saving/loading.</h6>
							</div>
						</div>
					</div>
				</div>
				<div class="row py-2">
					<div class="col">
						<div class="card">
							<div class="card-header">
								<h4>v1.3</h4>
							</div>
							<div class="card-body">
								<h6>Small bugfixes.</h6>
								<h6>Rollback support.</h6>
							</div>
						</div>
					</div>
				</div>
				<div class="row py-2">
					<div class="col">
						<div class="card">
							<div class="card-header">
								<h4>v1.2</h4>
							</div>
							<div class="card-body">
								<h6>Moved to ASP.Net Core app.</h6>
							</div>
						</div>
					</div>
				</div>
				<div class="row py-2">
					<div class="col">
						<div class="card">
							<div class="card-header">
								<h4>v1.1</h4>
							</div>
							<div class="card-body">
								<h6>Made decoration and sharpness modals show current row data, if any exists, on load.</h6>
								<h6>Removed redundant Item Color column from Weapon Tree.</h6>
							</div>
						</div>
					</div>
				</div>
				<div class="row py-2">
					<div class="col">
						<div class="card">
							<div class="card-header">
								<h4>v1.0.0</h4>
							</div>
							<div class="card-body">
								<h6>Initial release. Allows for tree generation with line-by-line weapon definitions.</h6>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>
<div class="modal fade" id="mdlCsv" tabindex="-1" aria-labelledby="csvModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-xl">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="csvModalLabel">Generate weapons from a csv file.</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div class="row">
					<h4>NOTE: Select a game and a default icon type before loading. <strong>Your existing paths will be cleared.</strong></h4>
					<span>Delimiter must be ','</span>
					<span>Format should be :</span>
					<span style="font-size: 14px;">Name,Parent,Rarity,Attack,Affinity,Defense,Element_hidden_bool,Element1,ElementAttack1,Element2,ElementAttack2,Elderseal,Deco1,Deco2,Deco3,</span>
					<span style="font-size: 14px;">RedSharpness1,OrangeSharpness1,YellowSharpness1,GreenSharpness1,BlueSharpness1,WhiteSharpness1,PurpleSharpness1,</span>
					<span style="font-size: 14px;">RedSharpness2,OrangeSharpness2,YellowSharpness2,GreenSharpness2,BlueSharpness2,WhiteSharpness2,PurpleSharpness2</span>
					<span>Sharpness can be fully omitted, or have sharpness 2 omitted, and can have sharpness2 be sharpness1 duplicated</span>
					<div class="row" style="margin-top: 10px; margin-bottom:10px;">
						<div class="col-6">
							<input type="checkbox" id="duplicateSharpnessCsv" /> Duplicate sharpness data
						</div>
					</div>
					<div class="row" style="margin-top: 10px; margin-bottom:10px;">
						<div class="col-10">
							<textarea class="form-control" type="file" id="inputCsvFile" rows="12"></textarea>
						</div>
						<div class="col" style="align-content:end;">
							<button class="btn btn-success" onclick="parseCsv()" type="button">Load csv</button>
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				</div>
			</div>
		</div>
	</div>
</div>